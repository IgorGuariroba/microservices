set $req_header "";
set $resp_header "";
header_filter_by_lua '
local h = ngx.req.get_headers()
for k, v in pairs(h) do
    if type(v) == "string" then
        ngx.var.req_header = ngx.var.req_header .. k..":"..v.."\\n"
    end
end
local rh = ngx.resp.get_headers()
for k, v in pairs(rh) do
    if type(v) == "string" then
        ngx.var.resp_header = ngx.var.resp_header .. k..":"..v.."\\n"
    end
end
';

lua_need_request_body on;

set $resp_body "";
body_filter_by_lua '
local resp_body = string.sub(ngx.arg[1], 1, 1000)
ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body

if ngx.arg[2] then
    local eh_um_html = string.find(ngx.ctx.buffered, "DOCTYPE html")
    if eh_um_html then
        ngx.var.resp_body = "HTML RESPONSE OMITIDO"
    else
        ngx.var.resp_body = ngx.ctx.buffered
    end
end
';

access_log  logs/access.log  main;
